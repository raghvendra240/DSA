

int Solution::solve(vector<int> &A) {
    
    int n=A.size();
    int count=0;
    
    vector<int>odd(n,0);
    vector<int>even(n,0);
    
    odd[0]=A[0];
    even[0]=0;
    
    for(int i=1;i<n;i++)
    {
        even[i]=even[i-1];
        odd[i]=odd[i-1];
        if((i+1)%2==0)
        {
            even[i]+=A[i];
        }
        else
          odd[i]+=A[i];
    }
    
    
    for(int i=0;i<n;i++)
    {
        int oddres=odd[n-1]-odd[i];      //sum of odd posn after i;
        int evenres=even[n-1]-even[i]; 
        
          if((i+1)%2==0)
        {
            //i is even and if we delete it then  
            // new even sum= even sum till i-1 coz ith is deleted and odd sum from (i to n-1) coz afeter deleting ith elem. all odd pos become even
           int x=even[i-1]+oddres;  // even pos sum
           int y=odd[i]+evenres;   //odd pos sum
           
           if(x==y)
             count++;
            
            
        }
        else
         {
             int x=even[i]+oddres;
            int y=odd[i-1]+evenres;
            
            if(x==y)
              count++;
             
         }
    }
    
    return count;
}
